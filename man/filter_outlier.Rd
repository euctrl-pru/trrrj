% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter.R
\name{filter_outlier}
\alias{filter_outlier}
\title{Identify and filter outliers}
\usage{
filter_outlier(df, col, ksize, fill, keep = FALSE)
}
\arguments{
\item{df}{a data frame of trajectory data}

\item{col}{the variable to filter for outliers}

\item{ksize}{the kernel size (must be odd)}

\item{fill}{whether to substitute the outlier with the median}

\item{keep}{whether to keep intermediate results}
}
\value{
a data frame with corrected outliers (if \code{fill} is TRUE).
        If \code{keep} is TRUE the intermediate columns \code{.<col>_median},
        \code{.<col>_eps2}, \code{.<col>_sigma} and \code{.<col>_outlier} are included.
}
\description{
The \code{col} values are processed through a median (i.e. low pass) filter
to get \code{.<col>_median}, the squared differences between
them \code{.<col>_eps2}, and its mean \code{.<col>_sigma}.
A \code{col} value is considered an outlier if \code{.<col>_eps2} is greater then
\code{.<col>_sigma}.
}
\details{
This approach is inspired by (copied from ;-) the \code{filter} function
in Xavier Olive's Python library
\href{https://github.com/xoolive/traffic}{\code{traffic}}.
}
\examples{
\dontrun{
library(readr)
library(dplyr)
library(anytime)
library(trrrj)
library(ggplot2)

ifile <- system.file("extdata", "belevingsvlucht.csv", package = "trrrj")
df <- readr::read_csv(ifile) \%>\%
  mutate(timestamp = anytime::anytime(time, tz = "UTC"))
df1 <- df \%>\%
  filter_outlier(col = baroaltitude, ksize = 17, fill = TRUE, keep = FALSE)
ggplot() +
  geom_line(data = df,  mapping = aes(x = timestamp, y = baroaltitude), colour = "blue") +
  geom_line(data = df1, mapping = aes(x = timestamp, y = baroaltitude), colour = "red")
}
}
